#!/usr/bin/perl -w
package command::stats;
use strict;
use CommonRoutines;

BEGIN {
	$__plugin_name    = 'Command: stats';
	$__plugin_version = '1.0';
	$__plugin_author  = 'ezbake consortium';
	$__plugin_date    = 'under construction';
};

$__plugin_handle  = command::stats->new();

sub new {
       	my $self = shift;
       	$self = bless({}, $self);
       	for (my $x = 0; $x < $#_; $x += 2) {
               	$self->{$_[$x]} = $_[$x+1];
       	}
       	return($self);
}

sub initialize {
	my ($self) = @_;
	registry_read('core')->event_insert('CMD_stats', 'privmsg', '^stats', \&command_stats);
}

sub shutdown {
	undef(&new);
	undef(&initialize);
	undef(&command_stats);
}

sub command_stats {
	my ($nick, $target, $message) = @_;
	my $self   = registry_read('backend.irc.handle');
	my $db     = registry_read('backend.db.handle');
	my ($userid)      = $db->user_nick_to_id($nick);
	my ($hasflag)     = $db->user_flag($userid, 'stats');
	if (!$userid || !$hasflag) {
		$self->client_notice(1, $nick, 'Insufficient permissions');
		return;
	}
	if (registry_read('plugins.loaded.backend.db.MySQL.time')) { # MySQL plugin loaded
		$self->client_message(1, $nick, '------------------------------');
		$self->client_message(1, $nick, 'plugin stats: backend.db.MySQL');
		$self->client_message(1, $nick, '------------------------------');
		$self->client_message(1, $nick, 'Queries executed: '.registry_read('backend.db.MySQL.db_handle')->{query_count});
		$self->client_message(1, $nick, 'Cache hits: '.registry_read('backend.db.MySQL.cache.hit'));
		$self->client_message(1, $nick, 'Cache misses: '.registry_read('backend.db.MySQL.cache.miss'));
		$self->client_message(1, $nick, 'Cache efficiency: '.sprintf('%.2f', ((100 / (registry_read('backend.db.MySQL.cache.miss') + registry_read('backend.db.MySQL.cache.hit'))) * registry_read('backend.db.MySQL.cache.hit'))).'%');
	}
}

1;

